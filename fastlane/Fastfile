# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

def versioned_commit(podspecs)
  version = version_get_podspec(path: podspecs.first)

  if git_tag_exists(tag: version)
    bump(podspecs)
    versioned_commit(podspecs)
  else
    add_git_tag(
      tag: version
    )

    push_to_git_remote(force: false)
  end
end

def bump(podspecs)
  podspecs.each {|spec| 
    version_bump_podspec(
      path: spec, 
      bump_type: "patch"
    ) 
  }

  version = version_get_podspec(path: podspecs.first)

  git_commit_message = "[ci skip] Dago - Fastlane Version Bump - Version: " + version
  git_commit(
    path: podspecs,
    message: git_commit_message
  )

  push_to_git_remote(force: false)
end

def push_podspec(podspecs)
  podspecs.each {|spec| 
    pod_push(
      path: spec, 
      repo: "douwebos", 
      sources: ["https://github.com/DouweBos/DJB-Pod-Specs", "https://cdn.cocoapods.org/"], 
      allow_warnings: true
    ) 
  }
end

def lib_lint_podspec(podspecs)
  podspecs.each {|spec| 
    sh('bundle exec pod cache clean --all')
    sh('bundle exec pod lib lint ../' + spec + ' --sources="https://github.com/DouweBos/DJB-Pod-Specs","https://cdn.cocoapods.org/" --allow-warnings')
  }
end

def spec_lint_podspec(podspecs)
  podspecs.each {|spec| 
    sh('bundle exec pod cache clean --all')
    sh('bundle exec pod spec lint ../' + spec + ' --sources="https://github.com/DouweBos/DJB-Pod-Specs","https://cdn.cocoapods.org/" --allow-warnings')
  }
end

def commit_docs
  docs_path = "../Docs/*"
  git_commit_message = "[ci skip] Dago - Jazzy Documentation"
  git_command = "git add --all " + docs_path + " && git commit -m \"" + git_commit_message + "\""
  
  sh(git_command)

  push_to_git_remote(force: false)
end

platform :ios do
  desc "Validate Dago pod spec"
  lane :validate do
    ensure_git_status_clean

    podspecs = Array[
      "Dago.podspec"
    ]

    lib_lint_podspec(podspecs)
  end

  desc "Push a Dago version to Douwe Pod Specs"
  lane :release do
    ensure_git_status_clean

    podspecs = Array[
      "Dago.podspec"
    ]

    lib_lint_podspec(podspecs)

    versioned_commit(podspecs)

    push_podspec(podspecs)

    spec_lint_podspec(podspecs)

    bump(podspecs)
  end

  desc "Generate Jazzy documentation"
  lane :documentation do
    ensure_git_status_clean

    jazzy_file = "jazzy.yml"

    jazzy(config: jazzy_file)

    sleep(5)

    commit_docs()
  end

  before_each do |lane, options|
    # send slack failure notification
    slack(
        message: "Dago - Lane: *#{lane}* started",
        slack_url: ENV["DB_SLACK_COCOAPODS_WEBHOOK"].to_s,
        success: true,
        default_payloads: [:git_branch, :last_git_commit_message]
    )
  end

  after_each do |lane, options|
    # send slack failure notification
    slack(
        message: "Dago - Lane: *#{lane}* finished",
        slack_url: ENV["DB_SLACK_COCOAPODS_WEBHOOK"].to_s,
        success: true,
        default_payloads: [:git_branch, :last_git_commit_message]
    )
  end

  # handle exception
  error do |lane, exception, options|
    # send slack failure notification
    slack(
        message: "Dago - Lane: *#{lane}* failed with exception: #{exception}",
        slack_url: ENV["DB_SLACK_COCOAPODS_WEBHOOK"].to_s,
        success: false,
        default_payloads: [:git_branch, :last_git_commit_message]
    )
  end
end
